* сделать выполнение команд шагового двигателя/*{{{*/
** терменю cодержит команду/*{{{*/
*** DONE написать энум  моторов
*** DONE добавить в дерево инпута
**** step 1 1000
SM_STEP
**** sspeed 1 50
SM_SPEED
**** senab 1 1
SM_ENABLE
**** sdir 1 1
SM_DIR
	/*}}}*/
/*}}}*/
*** DONE написать класс  моторов
	инициализирован указатель на спиай
	мотор принимает номер из энума
			и значение
	посути команды отличаются только кодом команды
*** DONE добавить  в хелп
*** DONE масив соотношения моторов и ного направления и удержания 
**** DONE добавиь в енум кортедж( таг, enbl pin, dir pin)
**** DONE периписать команда лида для включения выключения сдиговых пинов
**** DONE переписать команды под 8 бит
*** Подченить Тесты
** стм понимает команду/*{{{*/
*** DONE SM_ENABLE
*** DONE SM_DIR
*** класс степ мотора/*{{{*/ 
**** DONE сделать тест класс
		открыть инстрекцию создания нового тест коза
		сделать прототип
			взать за основу 
**** должен содержать /*{{{*/
	скорость
	переменую шагов
	проверка на енабл
	______________________
	рантайм()
	шаг()
	Сет_Енабл()
	Установить Скорость()
	/*}}}*/
/*}}}*/
*** масив моторов
/*}}}*/
*** SM_STEP
	входит в свитч
	первый параметр указывает на номер мотора в арее
	второй передаётся соответстуюшиму методу обекта
*** SM_SPEED
*** Рантайм моторов
	цикл пробигается по мосиву моторов
	у каждого вызывает рантайм
** запоминает и выводит постледий  ввод  
** как передовать байты выше 16ти
* сделать меню 
____________________________________________________________________________
* стм отрабатывает концевики/*{{{*/
добавить в клас мотора
** метод инита регистра ( 4 пина )
** метод считования 8 бит
** метод движениея с проверкой 
	вернуть переменую
** нулевое направление
	определяет направление на концевик
** переменная положениея
** метод обнуления переменой 
	двигатся к нулю проверя прерывание
каждый шаг
по достижении обнулить
переменую метки нуля
и переменую команд с обнуления
и переменую проверки движения к обнулению
** метод движения по координате
/*}}}*/
